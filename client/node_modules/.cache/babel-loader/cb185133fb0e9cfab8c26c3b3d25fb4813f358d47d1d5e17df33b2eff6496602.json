{"ast":null,"code":"var _jsxFileName = \"/Users/tonigaligimeno/Documents/BCS/Full-Stack Web App/Filmix/client/src/views/Movies.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { URL } from '../config';\nimport Usernavbar from '../components/Usernavbar';\nimport Display from './Display';\nimport { find } from '../../../server/models/usersModel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movies = _ref => {\n  _s();\n  let {\n    logout\n  } = _ref;\n  const [error, setError] = useState('');\n  const [isReady, setIsReady] = useState(false);\n  const [isImdbIdFound, setIsImdbIdFound] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState({\n    title: ''\n  });\n  const [media, setMedia] = useState({});\n  const [imdbid, setImdbid] = useState('');\n  const handleChange = e => setSearch({\n    ...search,\n    title: e.target.value\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    findMovie(search.title);\n  };\n  const findMovie = async title => {\n    let url = `${URL}/media/search`;\n    let url2 = `${URL}/media2/search`;\n    try {\n      const res = await axios.post(url, {\n        title\n      });\n      let {\n        Error,\n        Type,\n        imdbID\n      } = res.data.media;\n      if (Type !== 'movie') {\n        if (!Type) {\n          setError(`Seems that your movie doesn't exist`);\n          return setIsReady(true);\n        }\n        setError(`Seems that you're searching a ${Type}`);\n        return setIsReady(true);\n      }\n      ;\n      setMedia(res.data.media);\n      setImdbid(imdbID);\n      setIsImdbIdFound(true);\n      setError(Error);\n      findPoster(imd);\n    } catch (error) {\n      setError(error.message);\n      setIsReady(true);\n    }\n  };\n  const findMovie2 = async title => {\n    let url = `${URL}/media/search`;\n    let url2 = `${URL}/media2/search`;\n    try {\n      const res = await axios.post(url, {\n        title\n      });\n      let {\n        Error,\n        Type,\n        imdbID\n      } = res.data.media;\n      if (Type !== 'movie') {\n        if (!Type) {\n          setError(`Seems that your movie doesn't exist`);\n          return setIsReady(true);\n        }\n        setError(`Seems that you're searching a ${Type}`);\n        return setIsReady(true);\n      }\n      ;\n      setMedia(res.data.media);\n      setImdbid(imdbID);\n      const res2 = await axios.post(url2, {\n        imdbid\n      });\n      console.log(res2);\n      debugger;\n      setIsReady(true);\n      setError(Error);\n    } catch (error) {\n      setError(error.message);\n      setIsReady(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Usernavbar, {\n      logout: logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: search.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), isReady ? !error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Display, {\n        media: media\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : loading ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://www.organizedthemes.com/wp-content/plugins/remind-me/js/loading.gif\",\n      alt: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Movies, \"2UpjsAvT7qloh6kpRwhLWXlkvhw=\");\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useState","axios","URL","Usernavbar","Display","find","Movies","logout","error","setError","isReady","setIsReady","isImdbIdFound","setIsImdbIdFound","loading","setLoading","search","setSearch","title","media","setMedia","imdbid","setImdbid","handleChange","e","target","value","handleSubmit","preventDefault","findMovie","url","url2","res","post","Error","Type","imdbID","data","findPoster","imd","message","findMovie2","res2","console","log"],"sources":["/Users/tonigaligimeno/Documents/BCS/Full-Stack Web App/Filmix/client/src/views/Movies.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { URL } from '../config';\nimport Usernavbar from '../components/Usernavbar'\nimport Display from './Display';\nimport { find } from '../../../server/models/usersModel';\n\nconst Movies = ({logout}) => {\n  const [ error, setError ] = useState('');\n  const [ isReady, setIsReady ] = useState(false);\n  const [isImdbIdFound,setIsImdbIdFound] =useState(false);\n  const [ loading, setLoading ] = useState(false);\n  const [ search, setSearch ] = useState({title:''});\n  const [media,setMedia]=useState({});\n  const [imdbid,setImdbid]=useState('');\n\n  const handleChange = (e) => setSearch({ ...search, title: e.target.value });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    findMovie(search.title);\n  };\n  const findMovie = async (title) => {\n    let url = `${URL}/media/search`;\n    let url2= `${URL}/media2/search`;\n    try {\n      const res = await axios.post(url,{title});\n      let { Error,Type,imdbID} = res.data.media;\n      if(Type!=='movie'){\n        if (!Type) {\n          setError(`Seems that your movie doesn't exist`);\n          return setIsReady(true);\n        }\n         setError(`Seems that you're searching a ${Type}`);\n         return setIsReady(true);\n      };\n      setMedia(res.data.media);\n      setImdbid(imdbID)\n      setIsImdbIdFound(true);\n      setError(Error);\n      findPoster(imd)\n      } catch (error) {\n      setError(error.message);\n      setIsReady(true);\n    }\n  };\n  const findMovie2 = async (title) => {\n    let url = `${URL}/media/search`;\n    let url2= `${URL}/media2/search`;\n    try {\n      const res = await axios.post(url,{title});\n      let { Error,Type,imdbID} = res.data.media;\n      if(Type!=='movie'){\n        if (!Type) {\n          setError(`Seems that your movie doesn't exist`);\n          return setIsReady(true);\n        }\n         setError(`Seems that you're searching a ${Type}`);\n         return setIsReady(true);\n      };\n      setMedia(res.data.media);\n      setImdbid(imdbID)\n      const res2=await axios.post(url2,{imdbid});\n      console.log(res2);\n      debugger\n      setIsReady(true);\n      setError(Error);\n      } catch (error) {\n      setError(error.message);\n      setIsReady(true);\n    }\n  };\n  \n\n  return (\n    <div>\n      <Usernavbar logout={logout} />\n      <form onSubmit={handleSubmit}>\n        <input onChange={handleChange} value={search.title} />\n        <button >Submit</button>\n      </form>\n      {isReady ? !error ? (\n        <div>\n          <Display media={media}/>\n        </div>\n      ) : (\n        <h1>{error}</h1>\n      ) : loading ? (\n        <img src=\"https://www.organizedthemes.com/wp-content/plugins/remind-me/js/loading.gif\" alt=\"loading\" />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Movies;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}